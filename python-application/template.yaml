apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: python-template
  title: Python flask template
  description: Provisions a minimalistic flask application
spec:
  owner: dev-team
  type: service
  tags:
    - Flask
    - Github Actions
    - Kubernetes
    - ArgoCD
  parameters:
    - title: Fill in some steps
      required:
        - app_name
        - squad_name
      properties:
        app_name:
          title: Component name test 
          type: string
          description: Provide a component (microservice) name
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$'
        environment:
          title: Environment
          type: string
          description: The environment where this component will be deployed
          enum:
            - squad-a
            - squad-b
            - squad-c
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          app_name: ${{parameters.app_name}}
          app_env: ${{parameters.environment}}

    - id: publish
      name: Publish
      action: publish:github
      input:
        # allowedHosts:
        #   - github.com
        description: This is ${{ parameters.app_name }}
        repoUrl: github.com?owner=devops-brotherslab&repo=${{parameters.app_name}}
        defaultBranch: main
        protectDefaultBranch: false
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"
        
    # - id: argocd
    #   name: Create New Application in Argo CD
    #   action: http:backstage:request
    #   input:
    #     method: 'POST'
    #     path: '/proxy/argocd/api/applications'
    #     headers:
    #       content-type: 'application/json'
    #     body:
    #       metadata:
    #         name: ${{ parameters.appName }}
    #         namespace: argocd
    #       spec:
    #         project: default
    #         source:
    #           repoURL: https://github.com/${{ parameters.orgName }}/${{ parameters.appName }}-config.git
    #           targetRevision: master
    #           path: manifests
    #           helm:
    #             valueFiles:
    #               - values.${{ parameters.environment }}.yaml
    #         destination:
    #           server: https://kubernetes.default.svc
    #           namespace: ${{ parameters.namespace }}
    #         syncPolicy:
    #           automated:
    #             prune: true
    #             selfHeal: true
    #           syncOptions:
    #             - CreateNamespace=true

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
